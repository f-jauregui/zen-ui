@import '../scss/component-helpers.scss';

:host {
  display: flex;
  min-width: 0;
  position: relative;
  align-items: center;
  height: 3.5rem;
  padding-right: 2rem;
  margin-top: -1px; // collapse borders
}

// Border
// We place it to pseudo element so that when we set selected border z-index,
// we don't promote whole cell to extra layer (that would mess dropdown popovers)
:host::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  border-top: 1px solid $color-gray-200;
  border-bottom: 1px solid $color-gray-200;
  pointer-events: none;
}

// -----------------------------------------------------------------------------
// Selected border

:host([selected])::after,
:host([indeterminate])::after {
  border-top: 1px solid $color-blue-700;
  border-bottom: 1px solid $color-blue-700;
  z-index: 1; // selected item's border should prevail
}

// First cell:
:host([indeterminate]:first-child)::after,
:host([selected]:first-child)::after {
  border-left: 1px solid $color-blue-700;
}

// Last cell:
:host([selected]:last-child)::after,
:host([indeterminate]:last-child)::after {
  border-right: 1px solid $color-blue-700;
}

:host([selected][after-header])::after,
:host([indeterminate][after-header])::after {
  top: 1px;
}
// -----------------------------------------------------------------------------

:host([full-span]) {
  grid-column-start: 1;
  grid-column-end: -1;
  height: auto;
}

:host([header]) {
  height: 2rem;
  font-weight: bold;
  border-bottom: 1px solid $color-gray-200;
  background-color: $color-white !important;
}

:host([header])::after {
  content: none;
}

:host([sticky]) {
  position: sticky;
  top: -2px; // -2 to prevent bg leaking due to scrolling tremble
  z-index: 2;
}

.widgets {
  // 1px offset to render selected border on FF:
  top: 1px;
  right: auto;
  bottom: 1px;
  left: 1px;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  padding-left: 0.5rem;
}

.expand-icon {
  cursor: pointer;
  transition: transform $transition-micro-move;
}

.checkbox.invisible,
.expand-icon.invisible,
:host([header]) .expand-icon {
  visibility: hidden;
}

:host([expanded]) .expand-icon {
  transform: rotate(90deg);
}

// Depth padding:
$depth-padding: 1.8rem;

@for $i from 1 through 64 {
  :host([depth='#{$i}']:first-child) {
    padding-left: #{0.5rem + $i * $depth-padding};
  }
}

:host([selected]),
:host([expanded]),
:host([depth]:not([depth='0'])) {
  background-color: $color-blue-50;
}

@import '../../zen-styles/component-helpers.scss';
@import '../../zen-styles/mixins/forms.scss';

$expand-icon-transition: 0.2s;
$select-transition: 0.5s;

:host {
  display: table-row;
  border-top: 1px solid $color-gray-200;
  border-left: 1px solid $color-white;
  border-right: 1px solid $color-white;
  position: relative;
  transform: scale(1); // hack to apply position relative (tested in chrome & ff)
  transition: border $select-transition;
}

:host(.hidden) {
  display: none;
}

:host(.selected) {
  background: $color-blue-50;
  border: 1px solid $color-blue-700 !important;
}

:host([full-span-parent]) {
  border-bottom: 1px solid $color-gray-200;
}

:host([full-span]) ::slotted(*:first-child) {
  position: absolute;
  left: 0;
  width: 100%;
  inset: 0 0 auto 0;
  border-top: none;
}

.expand-icon {
  cursor: pointer;
  transition: transform $expand-icon-transition;
}

.expanded {
  .expand-icon {
    transform: rotate(90deg);
  }
}

.widgets {
  box-sizing: border-box;
  display: flex;
  flex-direction: row;
  justify-content: left;
  align-items: center;
  position: absolute;
  inset: 0 auto 0 0;
}

.widgets.hidden,
.checkbox.hidden,
.expand-icon.hidden {
  display: none;
}

// Checkboxes and expand arrow padding:
$arrow-width: 1rem;
$checkbox-width: 2rem;

:host(:not([depth]):not([full-span-parent]).expandable.selectable) ::slotted(*:first-child) {
  padding-left: #{$checkbox-width + $arrow-width};
}

@for $i from 0 through 32 {
  :host([depth='#{$i}']:not([full-span])) ::slotted(*:first-child) {
    padding-left: #{($i + 1) * 2}rem;
  }

  :host([depth='#{$i}']) .widgets {
    padding-left: #{$i * 2}rem;
  }

  :host([depth='#{$i}'].expandable) ::slotted(*:first-child) {
    padding-left: #{($i + 1) * $arrow-width};
  }

  :host([depth='#{$i}'].selectable) ::slotted(*:first-child) {
    padding-left: #{($i + 1) * $checkbox-width};
  }

  :host([depth='#{$i}'].selectable.expandable) ::slotted(*:first-child) {
    padding-left: #{($i + 1) * $checkbox-width + $arrow-width};
  }
}

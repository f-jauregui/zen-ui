// Padding --------------------------------------

$spacings: (
  'none': 0,
  'xs': 1px,
  'sm': 0.25rem,
  'md': 0.5rem,
  'lg': 1rem,
  'xl': 1.5rem,
  '2xl': 2rem,
  '3xl': 2.5rem,
  '4xl': 3rem,
  '5xl': 3.5rem,
  '6xl': 4rem,
);

@mixin paddingSizes {
  @each $key, $value in $spacings {
    :host([p='#{$key}']),
    :host(.p-#{$key}) {
      padding: #{$value};
    }
  }

  @each $key, $value in $spacings {
    :host([px='#{$key}']),
    :host(.px-#{$key}) {
      padding-left: #{$value};
      padding-right: #{$value};
    }
  }

  @each $key, $value in $spacings {
    :host([py='#{$key}']),
    :host(.py-#{$key}) {
      padding-top: #{$value};
      padding-bottom: #{$value};
    }
  }

  $side-shorts: [ 't', 'r', 'b', 'l' ];
  $sides: [ 'top', 'right', 'bottom', 'left' ];

  @for $i from 1 through length($sides) {
    $side-short: nth($side-shorts, $i);
    $side: nth($sides, $i);

    @each $key, $value in $spacings {
      :host([p#{$side-short}='#{$key}']),
      :host(.p#{$side-short}-#{$key}) {
        padding-#{$side}: #{$value};
      }
    }
  }
}

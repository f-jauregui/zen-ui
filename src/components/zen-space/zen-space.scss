:host {
  box-sizing: border-box;
  display: flex;
  overflow: hidden;
}

.content {
  box-sizing: border-box;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: baseline;
  flex: 1 1 100%;
}

:host([stretch]) .content {
  width: 100%;
}

:host([vertical]) .content {
  flex-direction: column;
}

:host(:not([no-wrap])) .content {
  flex-wrap: wrap;
}

// Padding --------------------------------------

$paddings: (
  'none': 0,
  'xs': 1px,
  'sm': 0.25rem,
  'md': 0.5rem,
  'lg': 1rem,
  'xl': 2rem,
);

@each $key, $value in $paddings {
  :host(.padding-#{$key}) .content {
    padding: #{$value};
  }
}

@each $key, $value in $paddings {
  :host(.padding-x-#{$key}) .content {
    padding-left: #{$value};
    padding-right: #{$value};
  }
}

@each $key, $value in $paddings {
  :host(.padding-y-#{$key}) .content {
    padding-top: #{$value};
    padding-bottom: #{$value};
  }
}

@each $side in [ 'top', 'right', 'bottom', 'left' ] {
  @each $key, $value in $paddings {
    :host(.padding-#{$side}-#{$key}) .content {
      padding-#{$side}: #{$value};
    }
  }
}

// Row align ------------------------------------

$aligns: (
  'start': 'flex-start',
  'end': 'flex-end',
  'center': 'center',
  'baseline': 'baseline',
  'stretch': 'stretch',
  'space-between': 'space-between',
  'space-around': 'space-around',
  'space-evenly': 'space-evenly',
);

@each $key, $value in $aligns {
  :host(:not([vertical])[vertical-align='#{$key}']) .content {
    align-items: #{$value};
  }
}

@each $key, $value in $aligns {
  :host(:not([vertical])[horizontal-align='#{$key}']) .content {
    justify-content: #{$value};
  }
}

// Column align ---------------------------------

@each $key, $value in $aligns {
  :host([vertical-align='#{$key}']) .content {
    justify-content: #{$value};
  }
}

@each $key, $value in $aligns {
  :host([horizontal-align='#{$key}']) .content {
    align-items: #{$value};
  }
}

:host([vertical][vertical-align='stretch']) ::slotted(*),
:host(:not([vertical])[horizontal-align='stretch']) ::slotted(*) {
  flex-grow: 1;
}

// Spacing --------------------------------------

$spacings: (
  'none': 0,
  'xs': 1px,
  'sm': 0.25rem,
  'md': 0.5rem,
  'lg': 1rem,
  'xl': 2rem,
);

@each $key, $value in $spacings {
  :host([spacing='#{$key}']) {
    .content {
      margin-left: #{-$value / 2};
      margin-right: #{-$value / 2};
    }

    ::slotted(*) {
      margin-left: #{$value / 2};
      margin-right: #{$value / 2};
    }
  }
}

@each $key, $value in $spacings {
  :host([spacing='#{$key}'][vertical]) {
    .content {
      margin-left: #{-$value / 2};
      margin-right: #{-$value / 2};
    }

    ::slotted(*) {
      margin-left: 0;
      margin-top: #{$value / 2};
      margin-bottom: #{$value / 2};
    }
  }
}

// Slotted --------------------------------------

::slotted(.space-before),
::slotted([space-before]) {
  margin-left: auto !important;
}

::slotted(.space-after),
::slotted([space-after]) {
  margin-right: auto !important;
}

::slotted(.fill),
::slotted([fill]) {
  flex-grow: 1 !important;
}

::slotted(.fill-lg),
::slotted([fill-lg]) {
  flex-grow: 2 !important;
}

::slotted(.fill-xl),
::slotted([fill-xl]) {
  flex-grow: 4 !important;
}
